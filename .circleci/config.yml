version: 2.1

executors:
  default:
    docker:
      - image: circleci/openjdk:17-jdk
    working_directory: ~/repo

jobs:
  build:
    executor: default
    steps:
      - checkout
      - run:
          name: Build Application
          command: ./gradlew build

  test:
    executor: default
    steps:
      - checkout
      - run:
          name: Run Tests
          command: ./gradlew test
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-report

  lint:
    executor: default
    steps:
      - checkout
      - run:
          name: Run Linting
          command: ./gradlew checkstyleMain checkstyleTest
      - store_artifacts:
          path: build/reports/checkstyle
          destination: lint-report

  static_analysis:
    executor: default
    steps:
      - checkout
      - run:
          name: Static Code Analysis with SonarCloud
          command: ./gradlew sonarqube

  vulnerability_scan:
    docker:
      - image: gitguardian/ggshield
    steps:
      - checkout
      - run:
          name: Scan for Vulnerabilities with GitGuardian
          command: ggshield scan repo .

  publish_artifact:
    executor: default
    steps:
      - checkout
      - run:
          name: Build Application
          command: ./gradlew build
      - run:
          name: Save Artifact
          command: |
            mkdir -p artifact-release
            cp build/libs/*.jar artifact-release/
      - run:
          name: Push Artifact to GitHub
          command: |
            git config --global user.email "sonia.martin.lorenzo@gmail.com"
            git config --global user.name "soniamarlo"
            git checkout main
            mkdir -p artifacts
            cp -r artifact-release/* artifacts/
            git add artifacts
            git commit -m "Publish artifacts for release"
            git push origin main

workflows:
  version: 2
  ci_cd_pipeline:
    jobs:
      - build
      - test
      - lint
      - static_analysis
      - vulnerability_scan
      - publish_artifact:
          filters:
            branches:
              only: main
